State 0:
          sql ::= * stmt_list
          stmt_list ::= * stmt
          stmt_list ::= * stmt_list SEMICOLON stmt
          stmt ::= * ddl
          stmt ::= * empty_stmt
      (5) empty_stmt ::= *
          ddl ::= * create
          ddl ::= * drop
          create ::= * CREATE TABLE identifier LEFT_PARENTHESES create_def_list RIGHT_PARENTHESES
          drop ::= * DROP TABLE identifier

                        CREATE shift        17     
                          DROP shift        10     
                     stmt_list shift        9      
                          stmt shift-reduce 1      stmt_list ::= stmt
                           ddl shift-reduce 3      stmt ::= ddl
                        create shift-reduce 6      ddl ::= create
                          drop shift-reduce 7      ddl ::= drop
                           sql accept
                    empty_stmt shift-reduce 4      stmt ::= empty_stmt
                     {default} reduce       5      empty_stmt ::=

State 1:
          stmt_list ::= stmt_list SEMICOLON * stmt
          stmt ::= * ddl
          stmt ::= * empty_stmt
      (5) empty_stmt ::= *
          ddl ::= * create
          ddl ::= * drop
          create ::= * CREATE TABLE identifier LEFT_PARENTHESES create_def_list RIGHT_PARENTHESES
          drop ::= * DROP TABLE identifier

                        CREATE shift        17     
                          DROP shift        10     
                          stmt shift-reduce 2      stmt_list ::= stmt_list SEMICOLON stmt
                           ddl shift-reduce 3      stmt ::= ddl
                        create shift-reduce 6      ddl ::= create
                          drop shift-reduce 7      ddl ::= drop
                    empty_stmt shift-reduce 4      stmt ::= empty_stmt
                     {default} reduce       5      empty_stmt ::=

State 2:
          create ::= CREATE TABLE identifier LEFT_PARENTHESES * create_def_list RIGHT_PARENTHESES
          create_def_list ::= * create_def
          create_def_list ::= * create_def_list COMMA create_def
          create_def ::= * col_name column_def
          create_def ::= * PRIMARY_KEY LEFT_PARENTHESES identifier RIGHT_PARENTHESES
          col_name ::= * identifier
          identifier ::= * ID

                   PRIMARY_KEY shift        12     
                            ID shift-reduce 19     identifier ::= ID
                    identifier shift-reduce 13     col_name ::= identifier
               create_def_list shift        8      
                    create_def shift-reduce 9      create_def_list ::= create_def
                      col_name shift        4      

State 3:
          create_def_list ::= create_def_list COMMA * create_def
          create_def ::= * col_name column_def
          create_def ::= * PRIMARY_KEY LEFT_PARENTHESES identifier RIGHT_PARENTHESES
          col_name ::= * identifier
          identifier ::= * ID

                   PRIMARY_KEY shift        12     
                            ID shift-reduce 19     identifier ::= ID
                    identifier shift-reduce 13     col_name ::= identifier
                    create_def shift-reduce 10     create_def_list ::= create_def_list COMMA create_def
                      col_name shift        4      

State 4:
          create_def ::= col_name * column_def
          column_def ::= * data_type
          data_type ::= * CHAR LEFT_PARENTHESES INT_NUM RIGHT_PARENTHESES
          data_type ::= * INT
          data_type ::= * DECIMAL
          data_type ::= * BOOLEAN

                          CHAR shift        15     
                           INT shift-reduce 16     data_type ::= INT
                       DECIMAL shift-reduce 17     data_type ::= DECIMAL
                       BOOLEAN shift-reduce 18     data_type ::= BOOLEAN
                    column_def shift-reduce 11     create_def ::= col_name column_def
                     data_type shift-reduce 14     column_def ::= data_type

State 5:
          identifier ::= * ID
          drop ::= DROP TABLE * identifier

                            ID shift-reduce 19     identifier ::= ID
                    identifier shift-reduce 20     drop ::= DROP TABLE identifier

State 6:
          create_def ::= PRIMARY_KEY LEFT_PARENTHESES * identifier RIGHT_PARENTHESES
          identifier ::= * ID

                            ID shift-reduce 19     identifier ::= ID
                    identifier shift        11     

State 7:
          create ::= CREATE TABLE * identifier LEFT_PARENTHESES create_def_list RIGHT_PARENTHESES
          identifier ::= * ID

                            ID shift-reduce 19     identifier ::= ID
                    identifier shift        16     

State 8:
          create ::= CREATE TABLE identifier LEFT_PARENTHESES create_def_list * RIGHT_PARENTHESES
          create_def_list ::= create_def_list * COMMA create_def

             RIGHT_PARENTHESES shift-reduce 8      create ::= CREATE TABLE identifier LEFT_PARENTHESES create_def_list RIGHT_PARENTHESES
                         COMMA shift        3      

State 9:
      (0) sql ::= stmt_list *
          stmt_list ::= stmt_list * SEMICOLON stmt

                             $ reduce       0      sql ::= stmt_list
                     SEMICOLON shift        1      

State 10:
          drop ::= DROP * TABLE identifier

                         TABLE shift        5      

State 11:
          create_def ::= PRIMARY_KEY LEFT_PARENTHESES identifier * RIGHT_PARENTHESES

             RIGHT_PARENTHESES shift-reduce 12     create_def ::= PRIMARY_KEY LEFT_PARENTHESES identifier RIGHT_PARENTHESES

State 12:
          create_def ::= PRIMARY_KEY * LEFT_PARENTHESES identifier RIGHT_PARENTHESES

              LEFT_PARENTHESES shift        6      

State 13:
          data_type ::= CHAR LEFT_PARENTHESES INT_NUM * RIGHT_PARENTHESES

             RIGHT_PARENTHESES shift-reduce 15     data_type ::= CHAR LEFT_PARENTHESES INT_NUM RIGHT_PARENTHESES

State 14:
          data_type ::= CHAR LEFT_PARENTHESES * INT_NUM RIGHT_PARENTHESES

                       INT_NUM shift        13     

State 15:
          data_type ::= CHAR * LEFT_PARENTHESES INT_NUM RIGHT_PARENTHESES

              LEFT_PARENTHESES shift        14     

State 16:
          create ::= CREATE TABLE identifier * LEFT_PARENTHESES create_def_list RIGHT_PARENTHESES

              LEFT_PARENTHESES shift        2      

State 17:
          create ::= CREATE * TABLE identifier LEFT_PARENTHESES create_def_list RIGHT_PARENTHESES

                         TABLE shift        7      

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: PLUS (precedence=1)
    2: MINUS (precedence=1)
    3: MULTIPLY (precedence=1)
    4: DIVIDE (precedence=1)
    5: EQUAL (precedence=1)
    6: GREATER (precedence=1)
    7: LESS (precedence=1)
    8: GT_EQ (precedence=2)
    9: LE_EQ (precedence=2)
   10: NOT_EQ (precedence=2)
   11: OR (precedence=2)
   12: AND (precedence=2)
   13: NOT (precedence=2)
   14: SEMICOLON
   15: CREATE
   16: TABLE
   17: LEFT_PARENTHESES
   18: RIGHT_PARENTHESES
   19: COMMA
   20: PRIMARY_KEY
   21: CHAR
   22: INT_NUM
   23: INT
   24: DECIMAL
   25: BOOLEAN
   26: ID
   27: DROP
   28: stmt_list: <lambda> SEMICOLON CREATE DROP
   29: stmt: <lambda> CREATE DROP
   30: ddl: CREATE DROP
   31: dml:
   32: create: CREATE
   33: drop: DROP
   34: identifier: ID
   35: create_def_list: PRIMARY_KEY ID
   36: create_def: PRIMARY_KEY ID
   37: col_name: ID
   38: column_def: CHAR INT DECIMAL BOOLEAN
   39: data_type: CHAR INT DECIMAL BOOLEAN
   40: sql: <lambda> SEMICOLON CREATE DROP
   41: empty_stmt: <lambda>
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ PLUS MINUS MULTIPLY DIVIDE EQUAL GREATER LESS GT_EQ LE_EQ NOT_EQ OR AND
NOT SEMICOLON CREATE TABLE LEFT_PARENTHESES RIGHT_PARENTHESES COMMA
PRIMARY_KEY CHAR INT DECIMAL BOOLEAN DROP dml sql empty_stmt
----------------------------------------------------
Rules:
   0: sql ::= stmt_list.
   1: stmt_list ::= stmt.
   2: stmt_list ::= stmt_list SEMICOLON stmt.
   3: stmt ::= ddl.
   4: stmt ::= empty_stmt.
   5: empty_stmt ::=.
   6: ddl ::= create.
   7: ddl ::= drop.
   8: create ::= CREATE TABLE identifier LEFT_PARENTHESES create_def_list RIGHT_PARENTHESES.
   9: create_def_list ::= create_def.
  10: create_def_list ::= create_def_list COMMA create_def.
  11: create_def ::= col_name column_def.
  12: create_def ::= PRIMARY_KEY LEFT_PARENTHESES identifier RIGHT_PARENTHESES.
  13: col_name ::= identifier.
  14: column_def ::= data_type.
  15: data_type ::= CHAR LEFT_PARENTHESES INT_NUM RIGHT_PARENTHESES.
  16: data_type ::= INT.
  17: data_type ::= DECIMAL.
  18: data_type ::= BOOLEAN.
  19: identifier ::= ID.
  20: drop ::= DROP TABLE identifier.
